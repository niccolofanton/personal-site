/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 vhs.glb -t -T 
Files: vhs.glb [737.43KB] > /Users/fant/work/personal-blog/public/models/vhs-transformed.glb [58.1KB] (92%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    vhs: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshBasicMaterial
  }
  animations: any[]
}

export const VhsModel = React.forwardRef<THREE.Group, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/models-transformed/vhs-transformed.glb') as GLTFResult
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.vhs.geometry} material={materials['Material.002']}  rotation={[-Math.PI / 2, 0, 0]} scale={[4.472, 0.582, 2.471]} />
    </group>
  )
})

useGLTF.preload('/models-transformed/vhs-transformed.glb')
