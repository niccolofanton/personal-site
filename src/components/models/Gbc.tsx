/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 gbc.glb -t -T 
Files: gbc.glb [21.88KB] > /Users/fant/work/personal-blog/public/models/gbc-transformed.glb [5.2KB] (76%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    gameboy: THREE.Mesh
  }
  materials: {
    GameboyColor: THREE.MeshStandardMaterial
  }
  animations: any[]
}

export const GbcModel = React.forwardRef<THREE.Group, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/models-transformed/gbc-transformed.glb') as GLTFResult
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.gameboy.geometry} material={materials.GameboyColor}  rotation={[0, 0, Math.PI / 2]}  />
    </group>
  )
})

useGLTF.preload('/models-transformed/gbc-transformed.glb')
