/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 car.glb -t -T 
Files: car.glb [982.43KB] > /Users/fant/work/personal-blog/public/models/car-transformed.glb [133.38KB] (86%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Hood_Body_0: THREE.Mesh
    Hood_Body_0_1: THREE.Mesh
    Hood_Body_0_2: THREE.Mesh
    Hood_Body_0_3: THREE.Mesh
    Hood_Body_0_4: THREE.Mesh
  }
  materials: {
    ['Body.001']: THREE.MeshStandardMaterial
    gt1_headlights_2: THREE.MeshStandardMaterial
    Thunderbolt: THREE.MeshStandardMaterial
    gt1_Bottom: THREE.MeshStandardMaterial
    GT1_Glass_Clean: THREE.MeshStandardMaterial
  }
  animations: any[]
}

export const CarModel = React.forwardRef<THREE.Group, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/models-transformed/car-transformed.glb') as GLTFResult
  return (
    <group ref={ref} {...props} dispose={null}>
      <group  rotation={[-Math.PI / 2, 0, 0]} scale={0.006}>
        <mesh geometry={nodes.Hood_Body_0.geometry} material={materials['Body.001']} />
        <mesh geometry={nodes.Hood_Body_0_1.geometry} material={materials.gt1_headlights_2} />
        <mesh geometry={nodes.Hood_Body_0_2.geometry} material={materials.Thunderbolt} />
        <mesh geometry={nodes.Hood_Body_0_3.geometry} material={materials.gt1_Bottom} />
        <mesh geometry={nodes.Hood_Body_0_4.geometry} material={materials.GT1_Glass_Clean} />
      </group>
    </group>
  )
})

useGLTF.preload('/models-transformed/car-transformed.glb')
