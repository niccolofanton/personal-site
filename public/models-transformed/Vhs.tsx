/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 vhs.glb -t -T 
Files: vhs.glb [720.87KB] > /Users/fant/work/personal-blog/public/models-transformed/vhs-transformed.glb [57.33KB] (92%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    vhs: THREE.Mesh
  }
  materials: {
    ['Material.004']: THREE.MeshBasicMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/vhs-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.vhs.geometry} material={materials['Material.004']} position={[-15.302, 3.246, -1.971]} rotation={[-Math.PI / 2, 0, -Math.PI]} scale={[4.472, 0.582, 2.471]} />
    </group>
  )
}

useGLTF.preload('/vhs-transformed.glb')
